name: GOSDK_RELEASE_STAGE

on:
  workflow_dispatch:
    inputs:
      fixed_tag:
        description: 'Type yes For Building With Tag v1.1.1 & Trigger with staging Tag for all Dependent Repos.'
        default: 'no'
        required: true
      version_tag:
        description: 'Input major or miner for release type. Default is patch'
        default: 'patch'
        required: true

env:
  GITHUB_TOKEN: ${{ secrets.GOSDK }}
  
jobs:
  build:
    name: Build
    runs-on: [self-hosted, build]

    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.18

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get Dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
        
    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...      

  make:
    name: Make File
    runs-on: [self-hosted, build]

    needs: 
    - build
    
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.18
        
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Create sdkfile
      run: |
        cat <<EOF > sdkversion.go
          package main
            import (
                "fmt"
                "github.com/0chain/gosdk/zcncore"
            )
            func main() {
                fmt.Println("gosdk version: ", zcncore.GetVersion())
            }
        EOF
        
    - name: Create SDK
      run: go build -o sdkversion sdkversion.go

    - name: Get Branch
      id: get_version
      run: |
        VERSION=$(echo ${GITHUB_REF#refs/heads/}) 
        echo ::set-output name=TAG::${VERSION}

    - name: Delete Old Release & Tag v1.1.1
      if: github.event.inputs.fixed_tag == 'yes' && steps.get_version.outputs.TAG == 'staging'
      uses: dev-drprasad/delete-tag-and-release@v0.2.0
      with:
        delete_release: true # default: false
        tag_name: v1.1.1 # tag name to delete
        repo: 0chain/gosdk # target repo (optional). defaults to repo running this action

    - name: Create New Release for Fixed v1.1.1
      id: create_release_v1_1_1
      if: github.event.inputs.fixed_tag == 'yes' && steps.get_version.outputs.TAG == 'staging'
      uses: zendesk/action-create-release@v1
      with:
        tag_name: v1.1.1
        release_name: v1.1.1
        draft: false
        prerelease: false

    - name: Create Release for Next Version
      id: create_release_next_version
      uses: zendesk/action-create-release@v1 
      with:
        draft: false
        prerelease: false
        auto_increment_type: ${{ github.event.inputs.version_tag }}
        tag_schema: semantic
        
  zproxy:
    name: Triggering 0proxy Build
    runs-on: [self-hosted, build]

    needs: 
    - make
    
    steps:
    - name: Generating JSON for Input
      id: get_tag
      run: |
          JSON=$(echo {\"latest_tag\":\"no\"\,\"branch_ref\":\"staging\"})
          BRANCH=$(echo ${GITHUB_REF#refs/heads/}) 
          echo ::set-output name=JSON::${JSON}
          echo ::set-output name=BRANCH::${BRANCH}
          echo "Branch ${BRANCH}."
          echo "Fixed Tag ${TAG}."
      env:
        TAG: ${{ github.event.inputs.fixed_tag }}

    - name: Triggering 0proxy Build
      uses: convictional/trigger-workflow-and-wait@v1.3.0
      if: steps.get_tag.outputs.BRANCH == 'staging' && github.event.inputs.fixed_tag == 'yes'
      with:
        owner: 0chain
        repo: gosdk
        github_token: ${{ secrets.GOSDK }}
        workflow_file_name: trigg-0proxy-build.yml
        ref: staging
        inputs: ${{ steps.get_tag.outputs.JSON }}
        propagate_failure: true
        trigger_workflow: true
        wait_workflow: true
        
  zbox:
    name: Triggering 0box Build
    runs-on: [self-hosted, build]

    needs: 
    - make
    
    steps:
    - name: Generating JSON for Input
      id: get_tag
      run: |
          JSON=$(echo {\"latest_tag\":\"no\"\,\"branch_ref\":\"staging\"})
          BRANCH=$(echo ${GITHUB_REF#refs/heads/}) 
          echo ::set-output name=JSON::${JSON}
          echo ::set-output name=BRANCH::${BRANCH}
          echo "Branch ${BRANCH}."
          echo "Fixed Tag ${TAG}."
      env:
        TAG: ${{ github.event.inputs.fixed_tag }}

    - name: Triggering 0box Build
      uses: convictional/trigger-workflow-and-wait@v1.3.0
      if: steps.get_tag.outputs.BRANCH == 'staging' && github.event.inputs.fixed_tag == 'yes'
      with:
        owner: 0chain
        repo: gosdk
        github_token: ${{ secrets.GOSDK }}
        workflow_file_name: trigg-0box-build.yml
        ref: staging
        inputs: ${{ steps.get_tag.outputs.JSON }}
        propagate_failure: true
        trigger_workflow: true
        wait_workflow: true
        
  zdns:
    name: Triggering 0dns Build
    runs-on: [self-hosted, build]

    needs: 
    - make
    
    steps:
    - name: Generating JSON for Input
      id: get_tag
      run: |
          JSON=$(echo {\"latest_tag\":\"no\"\,\"branch_ref\":\"staging\"})
          BRANCH=$(echo ${GITHUB_REF#refs/heads/}) 
          echo ::set-output name=JSON::${JSON}
          echo ::set-output name=BRANCH::${BRANCH}
          echo "Branch ${BRANCH}."
          echo "Fixed Tag ${TAG}."
      env:
        TAG: ${{ github.event.inputs.fixed_tag }}
        
    - name: Triggering 0dns Build
      uses: convictional/trigger-workflow-and-wait@v1.3.0
      if: steps.get_tag.outputs.BRANCH == 'staging' && github.event.inputs.fixed_tag == 'yes'
      with:
        owner: 0chain
        repo: gosdk
        github_token: ${{ secrets.GOSDK }}
        workflow_file_name: trigg-0dns-build.yml
        ref: staging
        inputs: ${{ steps.get_tag.outputs.JSON }}
        propagate_failure: true
        trigger_workflow: true
        wait_workflow: true
        
  zblock:
    name: Triggering 0block Build
    runs-on: [self-hosted, build]

    needs: 
    - make
    
    steps:
    - name: Generating JSON for Input
      id: get_tag
      run: |
          JSON=$(echo {\"latest_tag\":\"no\"\,\"branch_ref\":\"staging\"})
          BRANCH=$(echo ${GITHUB_REF#refs/heads/}) 
          echo ::set-output name=JSON::${JSON}
          echo ::set-output name=BRANCH::${BRANCH}
          echo "Branch ${BRANCH}."
          echo "Fixed Tag ${TAG}."
      env:
        TAG: ${{ github.event.inputs.fixed_tag }}
        
    - name: Triggering 0block Build
      uses: convictional/trigger-workflow-and-wait@v1.3.0
      if: steps.get_tag.outputs.BRANCH == 'staging' && github.event.inputs.fixed_tag == 'yes'
      with:
        owner: 0chain
        repo: gosdk
        github_token: ${{ secrets.GOSDK }}
        workflow_file_name: trigg-0block-build.yml
        ref: staging
        inputs: ${{ steps.get_tag.outputs.JSON }}
        propagate_failure: true
        trigger_workflow: true
        wait_workflow: true
        
  zsearch:
    name: Triggering 0search Build
    runs-on: [self-hosted, build]

    needs: 
    - make
    
    steps:
    - name: Generating JSON for Input
      id: get_tag
      run: |
          JSON=$(echo {\"latest_tag\":\"no\"\,\"branch_ref\":\"staging\"})
          BRANCH=$(echo ${GITHUB_REF#refs/heads/}) 
          echo ::set-output name=JSON::${JSON}
          echo ::set-output name=BRANCH::${BRANCH}
          echo "Branch ${BRANCH}."
          echo "Fixed Tag ${TAG}."
      env:
        TAG: ${{ github.event.inputs.fixed_tag }}
        
    - name: Triggering 0search Build
      uses: convictional/trigger-workflow-and-wait@v1.3.0
      if: steps.get_tag.outputs.BRANCH == 'staging' && github.event.inputs.fixed_tag == 'yes'
      with:
        owner: 0chain
        repo: gosdk
        github_token: ${{ secrets.GOSDK }}
        workflow_file_name: trigg-0search-build.yml
        ref: staging
        inputs: ${{ steps.get_tag.outputs.JSON }}
        propagate_failure: true
        trigger_workflow: true
        wait_workflow: true
        
  blobber:
    name: Triggering blobber Build
    runs-on: [self-hosted, build]

    needs: 
    - make
    
    steps:
    - name: Generating JSON for Input
      id: get_tag
      run: |
          JSON=$(echo {\"latest_tag\":\"no\"\,\"branch_ref\":\"staging\"})
          BRANCH=$(echo ${GITHUB_REF#refs/heads/}) 
          echo ::set-output name=JSON::${JSON}
          echo ::set-output name=BRANCH::${BRANCH}
          echo "Branch ${BRANCH}."
          echo "Fixed Tag ${TAG}."
      env:
        TAG: ${{ github.event.inputs.fixed_tag }}
        
    - name: Triggering blobber Build
      uses: convictional/trigger-workflow-and-wait@v1.3.0
      if: steps.get_tag.outputs.BRANCH == 'staging' && github.event.inputs.fixed_tag == 'yes'
      with:
        owner: 0chain
        repo: gosdk
        github_token: ${{ secrets.GOSDK }}
        workflow_file_name: trigg-blobber-build.yml
        ref: staging
        inputs: ${{ steps.get_tag.outputs.JSON }}
        propagate_failure: true
        trigger_workflow: true
        wait_workflow: true 

  zboxcli:
    name: Triggering zboxcli Build
    runs-on: [self-hosted, build]
    
    needs: 
    - make
    
    steps:
    - name: Generating JSON for Input
      id: get_tag
      run: |
          JSON=$(echo {\"branch_ref\":\"staging\"\,\"fixed_tag\":\"$TAG\"\,\"version_tag\":\"$VERSION_TAG\"})
          BRANCH=$(echo ${GITHUB_REF#refs/heads/}) 
          echo ::set-output name=JSON::${JSON}
          echo ::set-output name=BRANCH::${BRANCH}
          echo "Branch ${BRANCH}."
          echo "Fixed Tag ${TAG}."
      env:
        TAG: ${{ github.event.inputs.fixed_tag }}
        VERSION_TAG: ${{ github.event.inputs.version_tag }}

    - name: Triggering zboxcli Build
      uses: convictional/trigger-workflow-and-wait@v1.3.0
      if: steps.get_tag.outputs.BRANCH == 'staging' && github.event.inputs.fixed_tag == 'yes'
      with:
        owner: 0chain
        repo: gosdk
        github_token: ${{ secrets.GOSDK }}
        workflow_file_name: trigg-zboxcli.yml
        ref: staging
        inputs: ${{ steps.get_tag.outputs.JSON }}
        propagate_failure: true
        trigger_workflow: true
        wait_workflow: true

  zboxmobile:
    name: Triggering zboxmobile Build
    runs-on: [self-hosted, build]
    
    needs: 
    - make

    steps:
    - name: Generating JSON for Input
      id: get_tag
      run: |
          JSON=$(echo {\"branch_ref\":\"staging\"\,\"fixed_tag\":\"$TAG\"\,\"version_tag\":\"$VERSION_TAG\"})
          BRANCH=$(echo ${GITHUB_REF#refs/heads/}) 
          echo ::set-output name=JSON::${JSON}
          echo ::set-output name=BRANCH::${BRANCH}
          echo "Branch ${BRANCH}."
          echo "Fixed Tag ${TAG}."
      env:
        TAG: ${{ github.event.inputs.fixed_tag }}
        VERSION_TAG: ${{ github.event.inputs.version_tag }}
        
    - name: Triggering zboxmobile Build
      uses: convictional/trigger-workflow-and-wait@v1.3.0
      if: steps.get_tag.outputs.BRANCH == 'staging' && github.event.inputs.fixed_tag == 'yes'
      with:
        owner: 0chain
        repo: gosdk
        github_token: ${{ secrets.GOSDK }}
        workflow_file_name: trigg-zboxmobile.yml
        ref: staging
        inputs: ${{ steps.get_tag.outputs.JSON }}
        propagate_failure: true
        trigger_workflow: true
        wait_workflow: true   

  zwalletcli:
    name: Triggering zwalletcli Build
    runs-on: [self-hosted, build]
    
    needs: 
    - make
    
    steps:
    - name: Generating JSON for Input
      id: get_tag
      run: |
          JSON=$(echo {\"branch_ref\":\"staging\"\,\"fixed_tag\":\"$TAG\"\,\"version_tag\":\"$VERSION_TAG\"})
          BRANCH=$(echo ${GITHUB_REF#refs/heads/}) 
          echo ::set-output name=JSON::${JSON}
          echo ::set-output name=BRANCH::${BRANCH}
          echo "Branch ${BRANCH}."
          echo "Fixed Tag ${TAG}."
      env:
        TAG: ${{ github.event.inputs.fixed_tag }}
        VERSION_TAG: ${{ github.event.inputs.version_tag }}
        
    - name: Triggering zwalletcli Build
      uses: convictional/trigger-workflow-and-wait@v1.3.0
      if: steps.get_tag.outputs.BRANCH == 'staging' && github.event.inputs.fixed_tag == 'yes'
      with:
        owner: 0chain
        repo: gosdk
        github_token: ${{ secrets.GOSDK }}
        workflow_file_name: trigg-zwalletcli.yml
        ref: staging 
        inputs: ${{ steps.get_tag.outputs.JSON }}
        propagate_failure: true
        trigger_workflow: true
        wait_workflow: true
