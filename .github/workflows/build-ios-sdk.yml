name: Build IOS SDKs

concurrency:
  group: "build-mobile-${{ github.ref }}"
  cancel-in-progress: true

on:
  push:
    # branches: [ master, staging, qa ]
    tags:
      - 'v*.*.*'
  # pull_request:
  #   branches: [ master, staging, qa ]
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GOSDK }}

jobs:
  build-ios:
    name: Build-ios
    runs-on: macos-11

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go 1.x
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.4

      - name: Clean build
        run: make clean-mobilesdk

      - name: Install GoMobile
        run: |
          go install golang.org/x/mobile/cmd/gomobile@latest
          go install golang.org/x/mobile/cmd/gobind@latest
          gomobile init
        env:
          GO111MODULE: "on"

      - name: Setup GoMobile
        run:  make setup-gomobile

      - name: Build iOS
        run: |
          go version
          make build-ios

      - name: Compress
        run: |
          tar -czvf zcncore-ios.tar.gz out/iossdk/ios/zcncore.xcframework

      - name: Setup Build
        id: setup_build
        run: |
          tag=$(echo ${GITHUB_REF#refs/tags/})
          echo ${tag}
          if [[ "${{github.event_name}}" = "workflow_dispatch" ]]; then
            echo "> 0Chain: trigger from workflow_dispatch"

            echo "::set-output name=RELEASE::false"
            echo "::set-output name=TAG::none"
         
          elif [[ ${tag} = v*\.*\.* ]] ; then
            echo "> 0Chain: trigger from git event"
       
            # upload output on release
            echo "::set-output name=RELEASE::true"
            echo "::set-output name=TAG::${tag}"
          fi

      - name: Upload zcncore-ios to release
        if:  steps.setup_build.outputs.RELEASE == 'true'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: zcncore-ios.tar.gz
          tag: ${{ steps.setup_build.outputs.TAG }}
          overwrite: true
          file_glob: true

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: zcncore-ios
          path: |
            zcncore-ios.tar.gz

  build-macos:
    name: Build-macos
    runs-on:  macos-11

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go 1.x
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.4

      - name: Clean build
        run: make clean-mobilesdk

      - name: Install GoMobile
        run: |
          go install golang.org/x/mobile/cmd/gomobile@latest
          go install golang.org/x/mobile/cmd/gobind@latest
          gomobile init
        env:
          GO111MODULE: "on"

      - name: Setup GoMobile
        run:  make setup-gomobile

      - name: Build MacOS
        run: |
          go version
          make build-macos

      - name: Compress
        run: |
          tar -czvf zcncore-macos.tar.gz out/macossdk/zcncore.xcframework

      - name: Setup Build
        id: setup_build
        run: |
          tag=$(echo ${GITHUB_REF#refs/tags/})
          echo ${tag}
          if [[ "${{github.event_name}}" = "workflow_dispatch" ]]; then
            echo "> 0Chain: trigger from workflow_dispatch"

            echo "::set-output name=RELEASE::false"
            echo "::set-output name=TAG::none"
         
          elif [[ ${tag} = v*\.*\.* ]] ; then
            echo "> 0Chain: trigger from git event"
       
            # upload output on release
            echo "::set-output name=RELEASE::true"
            echo "::set-output name=TAG::${tag}"
          fi

      - name: Upload zcncore-macos to release
        if:  steps.setup_build.outputs.RELEASE == 'true'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: zcncore-macos.tar.gz
          tag: ${{ steps.setup_build.outputs.TAG }}
          overwrite: true
          file_glob: true

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: zcncore-macos
          path: |
            zcncore-macos.tar.gz
