name: Tests

concurrency:
  group: "${{ github.ref }}"
  cancel-in-progress: true

on:
  push:
    branches: [ master, staging ]
  pull_request:
    branches: [ master, staging ]

env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

jobs:
  #lint:
  #  runs-on: ubuntu-20.04
  #  steps:
  #  - name: Install Go
  #    uses: actions/setup-go@v2
  #    with:
  #      go-version: 1.16.x
  #  - uses: actions/checkout@v2
  #  - name: Install golangci-lint
  #    run: |
  #      go get github.com/golangci/golangci-lint/cmd/golangci-lint@v1.42.0
  #      golangci-lint --version
  #  - name: Lint
  #    run: make lint
  go-test:
    runs-on: [self-hosted, build]
    steps:
      - uses: actions/checkout@v2

      - name: Setup go 1.18
        uses: actions/setup-go@v2
        with:
          go-version: '1.18' # The Go version to download (if necessary) and use.

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install herumi's libraries
        run: sudo make install-herumi-ubuntu

      - name: Run Unit Test
        run: LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH make gosdk-test

  system-test:
    needs: go-test
    runs-on: [ tests-suite ]
    steps:
      - name: "Get current PR"
        uses: jwalton/gh-find-current-pr@v1
        id: findPr
        with:
          github-token: ${{ github.token }}

      - name: "Set PR status as pending"
        uses: niteoweb/pull_request_status_action@v1.0.0
        if: steps.findPr.outputs.number
        with:
          pr_number: ${{ steps.findPr.outputs.pr }}
          description: "System tests running with default config..."
          state: "pending"
          repository: ${{ github.repository }}
          context: "0Chain System Tests"
          target_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: "Setup"
        run: |
          echo "CURRENT_BRANCH_HEAD=$(echo $(([ -z '${{ github.event.pull_request.head.sha }}' ] && echo  $GITHUB_SHA) || echo '${{ github.event.pull_request.head.sha }}'))" >> $GITHUB_ENV
          echo "NETWORK_URL=$(echo dev-${RUNNER_NAME:(-1)}.devnet-0chain.net)" >> $GITHUB_ENV
          echo "RUNNER_NUMBER=${RUNNER_NAME:(-1)}" >> $GITHUB_ENV

      - name: "Deploy 0Chain"
        uses: 0chain/actions/deploy-0chain@master
        with:
          kube_config: ${{ secrets[format('DEV{0}KC', env.RUNNER_NUMBER)] }}
          teardown_condition: "TESTS_PASSED"
          miner_image:  staging
          sharder_image: staging
          blobber_image: staging
          validator_image: staging
          zbox_image: staging
          zblock_image: staging
          zdns_image: staging
          explorer_image: latest
          zproxy_image: staging
          zsearch_image: staging
          zbox_cli_branch: staging
          zwallet_cli_branch: staging
          custom_go_sdk_version: staging

      - name: "Run System tests"
        uses: 0chain/actions/run-system-tests@master
        with:
          custom_go_sdk_version: ${{ env.CURRENT_BRANCH_HEAD }}
          system_tests_branch: master
          network: ${{ env.NETWORK_URL }}
          zbox_cli_branch: staging
          zwallet_cli_branch: staging
          svc_account_secret: ${{ github.token }}
          deploy_report_page: false
          archive_results: true
          run_flaky_tests: false
          retry_failures: true

      - name: "Set PR status as ${{ job.status }}"
        if: ${{ (success() || failure()) && steps.findPr.outputs.number }}
        uses: niteoweb/pull_request_status_action@v1.0.0
        with:
          pr_number: ${{ steps.findPr.outputs.pr }}
          description: "System tests with default config ${{ job.status }}"
          state: ${{ job.status }}
          repository: ${{ github.repository }}
          context: "0Chain System Tests"
          target_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

  wasm-test:
    runs-on: [self-hosted, build]
    env:
      GOOS: js
      GOARCH: wasm
    steps:
      - uses: actions/checkout@v2

      - name: Setup go 1.18
        uses: actions/setup-go@v2
        with:
          go-version: '1.18' # The Go version to download (if necessary) and use.
      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Setup PATH for wasm
        run: echo "${{env.GOROOT}}/misc/wasm" >> $GITHUB_PATH

      - name: Install herumi's libraries
        run: sudo make install-herumi-ubuntu

      - name: Run wasm-test
        run: LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH make wasm-test

