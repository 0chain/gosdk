// Code generated by gobind. DO NOT EDIT.

// Java class zcncore.GetNotProcessedZCNBurnTicketsCallbackStub is a proxy for talking to a Go program.
//
//   autogenerated by gobind -lang=java command-line-arguments
package zcncore;

import go.Seq;

/**
 * Implementation of GetNotProcessedZCNBurnTicketsCallback
 */
public final class GetNotProcessedZCNBurnTicketsCallbackStub implements Seq.Proxy, GetNotProcessedZCNBurnTicketsCallback {
	static { Zcncore.touch(); }
	
	private final int refnum;
	
	@Override public final int incRefnum() {
	      Seq.incGoRef(refnum, this);
	      return refnum;
	}
	
	GetNotProcessedZCNBurnTicketsCallbackStub(int refnum) { this.refnum = refnum; Seq.trackGoRef(refnum, this); }
	
	public GetNotProcessedZCNBurnTicketsCallbackStub() { this.refnum = __New(); Seq.trackGoRef(refnum, this); }
	
	private static native int __New();
	
	// skipped field GetNotProcessedZCNBurnTicketsCallbackStub.WaitGroup with unsupported type: sync.WaitGroup
	
	public final native long getStatus();
	public final native void setStatus(long v);
	
	// skipped field GetNotProcessedZCNBurnTicketsCallbackStub.Value with unsupported type: []*command-line-arguments.BurnTicket
	
	public final native String getInfo();
	public final native void setInfo(String v);
	
	public native void add(long delta);
	public native void done();
	// skipped method GetNotProcessedZCNBurnTicketsCallbackStub.OnBalanceAvailable with unsupported parameter or return types
	
	public native void wait();
	@Override public boolean equals(Object o) {
		if (o == null || !(o instanceof GetNotProcessedZCNBurnTicketsCallbackStub)) {
		    return false;
		}
		GetNotProcessedZCNBurnTicketsCallbackStub that = (GetNotProcessedZCNBurnTicketsCallbackStub)o;
		// skipped field GetNotProcessedZCNBurnTicketsCallbackStub.WaitGroup with unsupported type: sync.WaitGroup
		
		long thisStatus = getStatus();
		long thatStatus = that.getStatus();
		if (thisStatus != thatStatus) {
		    return false;
		}
		// skipped field GetNotProcessedZCNBurnTicketsCallbackStub.Value with unsupported type: []*command-line-arguments.BurnTicket
		
		String thisInfo = getInfo();
		String thatInfo = that.getInfo();
		if (thisInfo == null) {
			if (thatInfo != null) {
			    return false;
			}
		} else if (!thisInfo.equals(thatInfo)) {
		    return false;
		}
		return true;
	}
	
	@Override public int hashCode() {
	    return java.util.Arrays.hashCode(new Object[] {getStatus(), getInfo()});
	}
	
	@Override public String toString() {
		StringBuilder b = new StringBuilder();
		b.append("GetNotProcessedZCNBurnTicketsCallbackStub").append("{");
		b.append("Status:").append(getStatus()).append(",");
		b.append("Info:").append(getInfo()).append(",");
		return b.append("}").toString();
	}
}

