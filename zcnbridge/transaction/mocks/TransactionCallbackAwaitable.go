// Code generated by mockery v2.36.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	zcncore "github.com/0chain/gosdk/zcncore"
)

// TransactionCallbackAwaitable is an autogenerated mock type for the TransactionCallbackAwaitable type
type TransactionCallbackAwaitable struct {
	mock.Mock
}

// OnAuthComplete provides a mock function with given fields: t, status
func (_m *TransactionCallbackAwaitable) OnAuthComplete(t *zcncore.Transaction, status int) {
	_m.Called(t, status)
}

// OnTransactionComplete provides a mock function with given fields: t, status
func (_m *TransactionCallbackAwaitable) OnTransactionComplete(t *zcncore.Transaction, status int) {
	_m.Called(t, status)
}

// OnVerifyComplete provides a mock function with given fields: t, status
func (_m *TransactionCallbackAwaitable) OnVerifyComplete(t *zcncore.Transaction, status int) {
	_m.Called(t, status)
}

// WaitCompleteCall provides a mock function with given fields: ctx
func (_m *TransactionCallbackAwaitable) WaitCompleteCall(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// WaitVerifyCall provides a mock function with given fields: ctx
func (_m *TransactionCallbackAwaitable) WaitVerifyCall(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewTransactionCallbackAwaitable creates a new instance of TransactionCallbackAwaitable. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTransactionCallbackAwaitable(t interface {
	mock.TestingT
	Cleanup(func())
}) *TransactionCallbackAwaitable {
	mock := &TransactionCallbackAwaitable{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
