// Code generated by mockery v2.28.1. DO NOT EDIT.

package mocks

import (
	fasthttp "github.com/hitenjain14/fasthttp"
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// FastClient is an autogenerated mock type for the FastClient type
type FastClient struct {
	mock.Mock
}

// DoTimeout provides a mock function with given fields: req, resp, timeout
func (_m *FastClient) DoTimeout(req *fasthttp.Request, resp *fasthttp.Response, timeout time.Duration) error {
	ret := _m.Called(req, resp, timeout)

	var r0 error
	if rf, ok := ret.Get(0).(func(*fasthttp.Request, *fasthttp.Response, time.Duration) error); ok {
		r0 = rf(req, resp, timeout)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewFastClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewFastClient creates a new instance of FastClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewFastClient(t mockConstructorTestingTNewFastClient) *FastClient {
	mock := &FastClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
