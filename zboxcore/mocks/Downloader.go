// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	sdk "github.com/0chain/gosdk/zboxcore/sdk"
	mock "github.com/stretchr/testify/mock"
)

// Downloader is an autogenerated mock type for the Downloader type
type Downloader struct {
	mock.Mock
}

// GetAllocation provides a mock function with given fields:
func (_m *Downloader) GetAllocation() *sdk.Allocation {
	ret := _m.Called()

	var r0 *sdk.Allocation
	if rf, ok := ret.Get(0).(func() *sdk.Allocation); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*sdk.Allocation)
		}
	}

	return r0
}

// GetFileName provides a mock function with given fields:
func (_m *Downloader) GetFileName() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Start provides a mock function with given fields: status
func (_m *Downloader) Start(status sdk.StatusCallback) error {
	ret := _m.Called(status)

	var r0 error
	if rf, ok := ret.Get(0).(func(sdk.StatusCallback) error); ok {
		r0 = rf(status)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewDownloader interface {
	mock.TestingT
	Cleanup(func())
}

// NewDownloader creates a new instance of Downloader. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDownloader(t mockConstructorTestingTNewDownloader) *Downloader {
	mock := &Downloader{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
