name: gosdk

# on:
#   workflow_dispatch:
#     inputs:
#       fixed_tag:
#         description: 'type yes for building with tag v0.0.0'
#         default: 'no'
#         required: true

# env:
#   GOSDK_REGISTRY: gosdk/gosdk

on: [push]

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13

    # - name: Get the version
    #   id: get_version
    #   run: |
    #       BRANCH=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//-/g')
    #       SHORT_SHA=$(echo $GITHUB_SHA | head -c 8)
    #       echo ::set-output name=BRANCH::${BRANCH}
    #       echo ::set-output name=VERSION::${BRANCH}-${SHORT_SHA}

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  make:
    name: make-file
    runs-on: ubuntu-20.04
    needs: 
    - build
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Create sdkfile
      run: |
        cat <<EOF >>sdkversion.go
          package main
            import (
                "fmt"
                "github.com/0chain/gosdk/zcncore"
            )
            func main() {
                fmt.Println("gosdk version: ", zcncore.GetVersion())
            }
        EOF
   - name: Get Dependencies SDK
     run: go get github.com/0chain/gosdk
   - name: Create SDK
     run: go build -o sdkversion sdkversion.go

  #  - name: Push Build
  #    run: |
  #      if [[ "$FIXED_PUSH" == "yes" ]]; then
  #        push $GOSDK_REGISTRY:v0.0.0
  #      else
  #        push $GOSDK_REGISTRY:$TAG
  #      fi
  #    env:
  #      FIXED_PUSH: ${{ github.event.inputs.fixed_tag }}
  #      TAG: ${{ steps.get_version.outputs.VERSION }}